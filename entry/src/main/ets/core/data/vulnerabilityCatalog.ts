import type { VulnerabilityMeta } from '../models/Vulnerability';

export const vulnerabilityCatalog: VulnerabilityMeta[] = [
  {
    id: 'insecure-storage',
    title: '1. 不安全的数据存储 & 日志',
    insecureSummary: '凭据直接明文写入Preferences并打印到日志。',
    secureHint: '对比&学习: 使用加密存储和脱敏日志。',
    targetPage: 'pages/InsecureStoragePage'
  },
  {
    id: 'insecure-network',
    title: '2. 不安全的网络通信',
    insecureSummary: 'HTTP 明文传输敏感参数。',
    secureHint: '对比&学习: 强制 HTTPS/双向认证。',
    targetPage: 'pages/InsecureNetworkPage'
  },
  {
    id: 'hardcoded-key',
    title: '3. 硬编码敏感信息',
    insecureSummary: '密钥硬编码在 ArkTS 中。',
    secureHint: '对比&学习: 使用密钥管理服务或安全分发。',
    targetPage: 'pages/HardcodedKeyPage'
  },
  {
    id: 'webview',
    title: '4. WebView 漏洞集合',
    insecureSummary: '无校验加载 URL 并暴露 JS 桥接对象。',
    secureHint: '对比&学习: URL 白名单与 JS 桥限权。',
    targetPage: 'pages/WebViewPage'
  },
  {
    id: 'ndk',
    title: '5. SO原生库漏洞',
    insecureSummary: '.so 内置固定密钥供 ArkTS 调用。',
    secureHint: '对比&学习: 动态密钥与白盒防护。',
    targetPage: 'pages/NdkPage'
  },
  {
    id: 'sql-injection',
    title: '6. SQLite SQL注入',
    insecureSummary: '拼接用户输入构造 SQL 查询。',
    secureHint: '对比&学习: 使用参数化查询。',
    targetPage: 'pages/SqlInjectionPage'
  },
  {
    id: 'secure-payment',
    title: '7. 模拟支付 (安全特性)',
    insecureSummary: '展示安全特性如何开启。',
    secureHint: '对比&学习: 正确调用安全键盘、防录屏。',
    targetPage: 'pages/SecurePaymentPage'
  },
  {
    id: 'exported-component',
    title: '8. 导出的组件 (页面劫持)',
    insecureSummary: 'SecretAbility 暴露敏感页面。',
    secureHint: '对比&学习: 按需导出并鉴权。',
    targetPage: '#',
    exposeDialog: {
      title: '组件暴露漏洞说明',
      message:
        '本应用内有一个名为 SecretAbility 的隐藏页面已被导出。请使用 adb 命令尝试拉起它：\n\naa start -b com.example.harmonyvulnerabledemo -a SecretAbility'
    }
  },
  {
    id: 'background-socket',
    title: '9. 后台Socket监听',
    insecureSummary: '演示后台 TCP 监听接口暴露风险。',
    secureHint: '对比&学习: 使用鉴权并限制监听生命周期。',
    targetPage: '##',
    exposeDialog: {
      title: '后台Socket监听说明',
      message:
        '应用已在后台启动TCP服务，监听9999端口。\n请使用 adb forward tcp:9999 tcp:9999 转发端口，然后用 nc localhost 9999 连接并发送指令 (如 GET_DEVICE_INFO)。'
    }
  }
];
